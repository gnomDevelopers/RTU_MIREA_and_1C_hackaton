basePath: /api
definitions:
  entities.AcademicDiscipline:
    properties:
      educational_direction:
        type: string
      id:
        type: integer
      individual_hours:
        type: integer
      lab_hours:
        type: integer
      lecture_hours:
        type: integer
      name:
        type: string
      practice_hours:
        type: integer
      semester:
        type: integer
      type_of_assessment:
        type: string
    type: object
  entities.Achievement:
    properties:
      id:
        type: integer
      name:
        type: string
      result:
        type: string
      user_id:
        type: integer
    type: object
  entities.Audience:
    properties:
      campus:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
      profile:
        type: string
      type:
        type: string
    type: object
  entities.Campus:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      university:
        type: string
    type: object
  entities.Class:
    properties:
      auditory:
        type: string
      date:
        type: string
      group_names:
        items:
          type: string
        type: array
      id:
        type: integer
      name:
        type: string
      teacher_names:
        items:
          type: string
        type: array
      time_end:
        type: string
      time_start:
        type: string
      type:
        type: string
      university:
        type: string
      week:
        type: integer
      weekday:
        type: integer
    type: object
  entities.CreateAcademicDisciplineRequest:
    properties:
      educational_direction:
        type: string
      individual_hours:
        type: integer
      lab_hours:
        type: integer
      lecture_hours:
        type: integer
      name:
        type: string
      practice_hours:
        type: integer
      semester:
        type: integer
      type_of_assessment:
        type: string
    type: object
  entities.CreateAcademicDisciplineResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateAchievementRequest:
    properties:
      name:
        type: string
      result:
        type: string
      user_id:
        type: integer
    type: object
  entities.CreateAchievementResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateAudiencesRequest:
    properties:
      campus:
        type: string
      capacity:
        type: integer
      name:
        type: string
      profile:
        type: string
      type:
        type: string
    type: object
  entities.CreateAudiencesResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateCampusesRequest:
    properties:
      address:
        type: string
      name:
        type: string
      university:
        type: string
    type: object
  entities.CreateCampusesResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateClassesRequest:
    properties:
      auditory:
        type: string
      date:
        type: string
      group_names:
        items:
          type: string
        type: array
      name:
        type: string
      teacher_names:
        items:
          type: string
        type: array
      time_end:
        type: string
      time_start:
        type: string
      type:
        type: string
      week:
        type: integer
      weekday:
        type: integer
    type: object
  entities.CreateClassesResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateDepartmentRequest:
    properties:
      name:
        type: string
      university:
        type: string
    type: object
  entities.CreateDepartmentResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateFacultyRequest:
    properties:
      name:
        type: string
      university:
        type: string
    type: object
  entities.CreateFacultyResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateGradeRequest:
    properties:
      class_id:
        type: integer
      user_id:
        type: integer
      value:
        type: integer
    type: object
  entities.CreateGradeResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateGroupRequest:
    properties:
      name:
        type: string
    type: object
  entities.CreateGroupResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateUniversityRequest:
    properties:
      name:
        type: string
      postfix:
        type: string
    type: object
  entities.CreateUniversityResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateUserRequest:
    properties:
      department_id:
        type: integer
      educational_direction:
        type: string
      faculty_id:
        type: integer
      father_name:
        type: string
      first_name:
        type: string
      group_id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      role:
        type: string
      university_id:
        type: integer
    type: object
  entities.CreateUserResponse:
    properties:
      email:
        type: string
      father_name:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
    type: object
  entities.CreateUserScheduleRequest:
    properties:
      date:
        type: string
      name:
        type: string
      time_end:
        type: string
      time_start:
        type: string
    type: object
  entities.CreateUserScheduleResponse:
    properties:
      id:
        type: integer
    type: object
  entities.Department:
    properties:
      id:
        type: integer
      name:
        type: string
      university:
        type: string
    type: object
  entities.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  entities.Faculty:
    properties:
      id:
        type: integer
      name:
        type: string
      university:
        type: string
    type: object
  entities.GetGradesBySubject:
    properties:
      grade_class:
        items:
          $ref: '#/definitions/entities.GradeClass'
        type: array
      group_member:
        items:
          $ref: '#/definitions/entities.GroupMember'
        type: array
      users_score:
        items:
          $ref: '#/definitions/entities.UsersScore'
        type: array
    type: object
  entities.GetUserScheduleResponse:
    properties:
      classes:
        items:
          $ref: '#/definitions/entities.Class'
        type: array
      user_schedule:
        items:
          $ref: '#/definitions/entities.UserSchedule'
        type: array
    type: object
  entities.Gpa:
    properties:
      user_id:
        type: integer
      value:
        type: number
    type: object
  entities.Grade:
    properties:
      class_id:
        type: integer
      id:
        type: integer
      user_id:
        type: integer
      value:
        type: integer
    type: object
  entities.GradeClass:
    properties:
      date:
        type: string
      grades:
        items:
          $ref: '#/definitions/entities.Grade'
        type: array
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  entities.Group:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.GroupMember:
    properties:
      father_name:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  entities.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entities.LoginUserResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
    type: object
  entities.ParseScheduleResponse:
    properties:
      message:
        type: string
    type: object
  entities.ScheduleGroup:
    properties:
      group:
        type: string
    type: object
  entities.ScheduleName:
    properties:
      name:
        type: string
    type: object
  entities.ScheduleTeachers:
    properties:
      teacher:
        type: string
    type: object
  entities.University:
    properties:
      id:
        type: integer
      name:
        type: string
      postfix:
        type: string
    type: object
  entities.UpdateDeleteAudienceResponse:
    properties:
      message:
        type: string
    type: object
  entities.UpdateDeleteCampusResponse:
    properties:
      message:
        type: string
    type: object
  entities.UpdateDeleteClassResponse:
    properties:
      message:
        type: string
    type: object
  entities.UpdateDeleteUniversityResponse:
    properties:
      message:
        type: string
    type: object
  entities.UpdateDeleteUserScheduleResponse:
    properties:
      message:
        type: string
    type: object
  entities.UpdateRoleRequest:
    properties:
      new_role:
        type: string
    type: object
  entities.UpdateUserScheduleRequest:
    properties:
      date:
        type: string
      id:
        type: integer
      name:
        type: string
      time_end:
        type: string
      time_start:
        type: string
    type: object
  entities.User:
    properties:
      created_at:
        type: string
      department_id:
        type: integer
      educational_direction:
        type: string
      email:
        type: string
      faculty_id:
        type: integer
      father_name:
        type: string
      first_name:
        type: string
      group_id:
        type: integer
      id:
        type: integer
      is_deleted:
        type: boolean
      is_password_changed:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      role:
        type: string
      university_id:
        type: integer
    type: object
  entities.UserInfo:
    properties:
      department_id:
        type: integer
      educational_direction:
        type: string
      email:
        type: string
      faculty_id:
        type: integer
      father_name:
        type: string
      first_name:
        type: string
      group_id:
        type: integer
      id:
        type: integer
      last_name:
        type: string
      role:
        type: string
      university_name:
        type: string
    type: object
  entities.UserSchedule:
    properties:
      date:
        type: string
      id:
        type: integer
      name:
        type: string
      time_end:
        type: string
      time_start:
        type: string
      user_data_id:
        type: integer
    type: object
  entities.UsersScore:
    properties:
      average_score:
        type: number
      sum_score:
        type: integer
      user_id:
        type: integer
    type: object
info:
  contact: {}
  title: VUZ+ API
  version: "1.0"
paths:
  /achievement/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an achievement by the specified ID.
      parameters:
      - description: Achievement ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted achievement ID
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid achievement ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete an achievement
      tags:
      - achievements
  /auth/achievement:
    post:
      consumes:
      - application/json
      description: Creates a new achievement with the provided details.
      parameters:
      - description: Achievement creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateAchievementRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created achievement details
          schema:
            $ref: '#/definitions/entities.CreateAchievementResponse'
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new achievement
      tags:
      - achievements
  /auth/achievements/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves an achievement by the specified user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Achievement details
          schema:
            items:
              $ref: '#/definitions/entities.Achievement'
            type: array
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get achievement by user ID
      tags:
      - achievements
  /auth/audience:
    post:
      consumes:
      - application/json
      parameters:
      - description: audience data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/entities.CreateAudiencesRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.CreateAudiencesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Audiences
      tags:
      - audience
    put:
      consumes:
      - application/json
      parameters:
      - description: audience data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.Audience'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteAudienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update audience
      tags:
      - audience
  /auth/audience/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: audience id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteAudienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete audience
      tags:
      - audience
  /auth/audience/campus/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: campus name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Audience'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audience by name
      tags:
      - audience
  /auth/audience/capacity/{capacity}:
    get:
      consumes:
      - application/json
      parameters:
      - description: audience capacity
        in: path
        name: capacity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Audience'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audience by capacity
      tags:
      - audience
  /auth/audience/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: audience id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Audience'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audience by id
      tags:
      - audience
  /auth/audience/profile/{profile}:
    get:
      consumes:
      - application/json
      parameters:
      - description: audience profile
        in: path
        name: profile
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Audience'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audience by profile
      tags:
      - audience
  /auth/audience/type/{type}:
    get:
      consumes:
      - application/json
      parameters:
      - description: audience type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Audience'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audience by type
      tags:
      - audience
  /auth/audience/university/{university}:
    get:
      consumes:
      - application/json
      parameters:
      - description: audience university
        in: path
        name: university
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Audience'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get audience by university
      tags:
      - audience
  /auth/campus:
    post:
      consumes:
      - application/json
      parameters:
      - description: campus data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/entities.CreateCampusesRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.CreateCampusesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create campuses
      tags:
      - campus
    put:
      consumes:
      - application/json
      parameters:
      - description: campus data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.Campus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteCampusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update campus
      tags:
      - campus
  /auth/campus/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: campus id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteCampusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete campus
      tags:
      - campus
  /auth/campus/address/{address}:
    get:
      consumes:
      - application/json
      parameters:
      - description: campus address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Campus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get campus by address
      tags:
      - campus
  /auth/campus/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Campus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all campuses
      tags:
      - campus
  /auth/campus/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: campus id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Campus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get campus by id
      tags:
      - campus
  /auth/campus/name/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: campus name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Campus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get campus by name
      tags:
      - campus
  /auth/campus/university/{university}:
    get:
      consumes:
      - application/json
      parameters:
      - description: campus university
        in: path
        name: university
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Campus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get campus by university
      tags:
      - campus
  /auth/class:
    post:
      consumes:
      - application/json
      parameters:
      - description: class data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/entities.CreateClassesRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.CreateClassesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create classes
      tags:
      - class
    put:
      consumes:
      - application/json
      parameters:
      - description: class data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.Class'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteClassResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update class
      tags:
      - class
  /auth/class/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: class id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteClassResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete class
      tags:
      - class
  /auth/class/auditory/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: class auditory
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Class'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get class by auditory
      tags:
      - class
  /auth/class/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: class id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Class'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get class by id
      tags:
      - class
  /auth/department:
    post:
      consumes:
      - application/json
      description: Creates a new department with the provided details.
      parameters:
      - description: Department creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created department details
          schema:
            $ref: '#/definitions/entities.CreateDepartmentResponse'
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new department
      tags:
      - department
  /auth/department/university/{university}:
    get:
      consumes:
      - application/json
      parameters:
      - description: university
        in: path
        name: university
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Department'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get departments by university
      tags:
      - department
  /auth/discipline:
    post:
      consumes:
      - application/json
      parameters:
      - description: class data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/entities.CreateAcademicDisciplineRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.CreateAcademicDisciplineResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create discipline
      tags:
      - discipline
    put:
      consumes:
      - application/json
      parameters:
      - description: university data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.AcademicDiscipline'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update discipline
      tags:
      - discipline
  /auth/discipline/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: discipline id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete discipline
      tags:
      - discipline
  /auth/discipline/name/{ed_dir}/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ed_dir
        in: path
        name: ed_dir
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.AcademicDiscipline'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get discipline by ed dir and name
      tags:
      - discipline
  /auth/discipline/semester/{ed_dir}/{semester}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ed_dir
        in: path
        name: ed_dir
        required: true
        type: string
      - description: semester
        in: path
        name: semester
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.AcademicDiscipline'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get discipline by ed dir and semester
      tags:
      - discipline
  /auth/faculties/university/{university}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of faculties based on the specified university
        name.
      parameters:
      - description: University name (URL-encoded)
        in: path
        name: university
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of faculties
          schema:
            items:
              $ref: '#/definitions/entities.Faculty'
            type: array
        "400":
          description: Invalid university name
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get faculties by university name
      tags:
      - faculties
  /auth/faculty:
    post:
      consumes:
      - application/json
      description: Creates a new faculty record in the system.
      parameters:
      - description: Faculty data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entities.CreateFacultyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created faculty details
          schema:
            $ref: '#/definitions/entities.CreateFacultyResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Creates a new faculty
      tags:
      - faculties
  /auth/gpa:
    put:
      consumes:
      - application/json
      parameters:
      - description: campus data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.Gpa'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteCampusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update gpa
      tags:
      - gpa
  /auth/gpa/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Gpa'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get gpa by user id
      tags:
      - gpa
  /auth/grade:
    post:
      consumes:
      - application/json
      parameters:
      - description: grade data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateGradeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateGradeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create grade
      tags:
      - grade
  /auth/grade/{group}/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: group
        in: path
        name: group
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.GetGradesBySubject'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get grade by group
      tags:
      - grade
  /auth/group:
    post:
      consumes:
      - application/json
      parameters:
      - description: Group data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateGroupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new group
      tags:
      - group
  /auth/groups/university/{university}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all groups associated with the specified university
        name.
      parameters:
      - description: University name (URL-encoded)
        in: path
        name: university
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of groups
          schema:
            items:
              $ref: '#/definitions/entities.Group'
            type: array
        "400":
          description: Invalid university name
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all groups by university name
      tags:
      - groups
  /auth/percentile/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Class'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get percentile by user id
      tags:
      - gpa
  /auth/schedule/group/{group}:
    get:
      consumes:
      - application/json
      parameters:
      - description: schedule group
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Class'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get schedule
      tags:
      - schedule
  /auth/schedule/group_subjects:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ScheduleName'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение всех предметов группы
      tags:
      - schedule
  /auth/schedule/optionals/{optionals}:
    get:
      consumes:
      - application/json
      parameters:
      - description: schedule optionals
        in: path
        name: optionals
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Class'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get schedule optionals
      tags:
      - schedule
  /auth/schedule/parse:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Upload schedule file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ParseScheduleResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get schedule by name
      tags:
      - schedule
  /auth/schedule/search/group:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ScheduleGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search groups
      tags:
      - schedule
  /auth/schedule/search/name:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ScheduleName'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search names
      tags:
      - schedule
  /auth/schedule/search/teacher:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ScheduleTeachers'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search teachers
      tags:
      - schedule
  /auth/schedule/teacher/{teacher}:
    get:
      consumes:
      - application/json
      parameters:
      - description: schedule teacher
        in: path
        name: teacher
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Class'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get schedule by teacher
      tags:
      - schedule
  /auth/university:
    post:
      consumes:
      - application/json
      parameters:
      - description: university data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUniversityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create university
      tags:
      - university
    put:
      consumes:
      - application/json
      parameters:
      - description: university data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.University'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update university
      tags:
      - university
  /auth/university/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: university id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete university
      tags:
      - university
  /auth/university/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.University'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all universities
      tags:
      - university
  /auth/university/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: university id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.University'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get university by name
      tags:
      - university
  /auth/university/name/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: university name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.University'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get university by name
      tags:
      - university
  /auth/user:
    post:
      consumes:
      - application/json
      description: Creates multiple users based on the provided list of user details
        in the request body.
      parameters:
      - description: List of users to create
        in: body
        name: users
        required: true
        schema:
          items:
            $ref: '#/definitions/entities.CreateUserRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: List of created user responses
          schema:
            items:
              $ref: '#/definitions/entities.CreateUserResponse'
            type: array
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create multiple users
      tags:
      - user
  /auth/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves the user details based on the specified user ID provided
        in the URL parameter.
      parameters:
      - description: User  ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User  details
          schema:
            $ref: '#/definitions/entities.UserInfo'
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Retrieve a user by ID
      tags:
      - user
  /auth/user/university/{university}:
    get:
      consumes:
      - application/json
      parameters:
      - description: university
        in: path
        name: university
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get users by university
      tags:
      - user
  /auth/user_schedule:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.GetUserScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get users schedule
      tags:
      - user schedule
    post:
      consumes:
      - application/json
      parameters:
      - description: class data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUserScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateUserScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create user schedule
      tags:
      - user schedule
    put:
      consumes:
      - application/json
      parameters:
      - description: users schedule data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateUserScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteUserScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update users schedule
      tags:
      - user schedule
  /auth/user_schedule/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: users schedule id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UpdateDeleteUserScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete users schedule
      tags:
      - user schedule
  /auth/work/response:
    get:
      consumes:
      - application/json
      parameters:
      - description: university data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUniversityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Response
      tags:
      - work
    post:
      consumes:
      - application/json
      parameters:
      - description: university data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUniversityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Response
      tags:
      - work
  /login:
    get:
      consumes:
      - application/json
      description: Validates the JWT token from the Authorization header, extracts
        user ID, and generates a new access token.
      parameters:
      - description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: New access token and user ID
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Missing auth token
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid auth header or token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Authorization check
      tags:
      - authentication
    post:
      consumes:
      - application/json
      description: Authenticates a user and sets access and refresh tokens as cookies.
      parameters:
      - description: User login credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.LoginUserResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: User login
      tags:
      - authentication
  /user/{id}/promote:
    put:
      consumes:
      - application/json
      description: Updates the role of a user based on the provided user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New role details
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user role
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID or request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user role
      tags:
      - users
  /work/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: university data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUniversityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateUniversityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Login in hr
      tags:
      - work
  /work/login/hr:
    post:
      consumes:
      - application/json
      description: Authenticates a user and sets access and refresh tokens as cookies.
      parameters:
      - description: User login credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.LoginUserResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Hr login
      tags:
      - work
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
