networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - '/etc/letsencrypt:/etc/letsencrypt'
    depends_on:
      - backend
      - frontend
    networks:
      - dev

  db:
    image: postgres:16.3-alpine
    ports:
      - 5432:5432
    volumes:
      - './database:/var/lib/postgresql/data'
    restart: unless-stopped

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d taskmaster" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    env_file:
      - ./backend/.env
    networks:
      - dev

  backend:
    build:
      context: ./backend
    networks:
      - dev
    env_file:
      - ./backend/.env
    depends_on:
      frontend:
        condition: service_started
      db:
        condition: service_healthy


  frontend:
    build:
      context: ./hackathon
    networks:
      - dev
    depends_on:
      - db
